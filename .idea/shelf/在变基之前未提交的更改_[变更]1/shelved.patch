Index: src/com/kekwy/se/data/DataStruct.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/kekwy/se/data/DataStruct.java b/src/com/kekwy/se/data/DataStruct.java
--- a/src/com/kekwy/se/data/DataStruct.java	
+++ b/src/com/kekwy/se/data/DataStruct.java	
@@ -8,7 +8,17 @@
 
     private final List<IOPort> nextSteps = new LinkedList<>();
 
+    private Loadable payLoad;
+
     public IOPort getNextStep() {
         return nextSteps.remove(0);
     }
+
+    public Loadable getPayLoad() {
+        return payLoad;
+    }
+
+    public void setPayLoad(Loadable payLoad) {
+        this.payLoad = payLoad;
+    }
 }
Index: JudgeTool/src/com/kekwy/se/JudgeToolController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JudgeTool/src/com/kekwy/se/JudgeToolController.java b/JudgeTool/src/com/kekwy/se/JudgeToolController.java
--- a/JudgeTool/src/com/kekwy/se/JudgeToolController.java	
+++ b/JudgeTool/src/com/kekwy/se/JudgeToolController.java	
@@ -1,13 +1,12 @@
 package com.kekwy.se;
 
-import com.kekwy.se.assignment.Generator;
-import com.kekwy.se.assignment.Compiler;
+import com.kekwy.se.assignment.AssignmentManager;
 import com.kekwy.se.data.DataStruct;
 import com.kekwy.se.data.IOPort;
+import com.kekwy.se.data.SourceCodeGroup;
 
+import java.io.File;
 import java.util.*;
-import java.util.concurrent.ExecutorService;
-import java.util.concurrent.Executors;
 
 public class JudgeToolController {
     private static JudgeToolController judgeToolController;
@@ -22,43 +21,38 @@
         return judgeToolController;
     }
 
-    private Generator generator;
-
-    private final Map<String, Compiler> preprocessorMap = new HashMap<>();
-
-    private void setGenerator(Generator generator) {
-        this.generator = generator;
-    }
-
-    private void addPreprocessor(String programLanguage, Compiler compiler) {
-        preprocessorMap.put(programLanguage, compiler);
-    }
-
     private boolean active = true;
 
-    private final List<String> receiveBuffer = new LinkedList<>();
-
-    private final ExecutorService exec = Executors.newCachedThreadPool();
-
     private void send() {
-
+        while (active) {
+            assignmentManager.waitForData();
+        }
     }
 
     private void createAssignment(DataStruct data) {
-
+        if (data.getPayLoad() instanceof SourceCodeGroup group) {
+            JudgeAssignment assignment = new JudgeAssignment(group.getFileList(),
+                    group.getLanguage(), group.getInputType());
+            assignmentManager.postAssignment(assignment);
+        } else {
+            // TODO 进行错误处理
+        }
     }
-
     public final IOPort<DataStruct> ioPort = new IOPort<>();
 
+    private final AssignmentManager<List<List<File[]>>> assignmentManager = new AssignmentManager<>();
+
     private void receive() {
         while (active) {
             DataStruct data = ioPort.get();
             if(data == null) {
                 active = false;
+                assignmentManager.setActive(false);
             } else {
-
+                createAssignment(data);
             }
         }
+        // TODO 保存数据退出运行
     }
 
     public void start() {
Index: JudgeTool/src/com/kekwy/se/JudgeAssignment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JudgeTool/src/com/kekwy/se/JudgeAssignment.java b/JudgeTool/src/com/kekwy/se/JudgeAssignment.java
--- a/JudgeTool/src/com/kekwy/se/JudgeAssignment.java	
+++ b/JudgeTool/src/com/kekwy/se/JudgeAssignment.java	
@@ -106,7 +106,7 @@
             List<File> outputFiles = exec(execFiles, inputFile);   // 执行程序，保存输出
             List<List<File[]>> result = compare(outputFiles);      // 对比输出结果，划分等价对
             removeTempFiles(inputFile, execFiles, outputFiles);    // 删除测试过程中产生的临时文件
-            return result;
+            return result;                                         // 返回执行结果
         } catch (IOException e) {
             throw new RuntimeException(e);
         }
